设一个数组:
vector<int>nums={1,2,3,5,5,5,8,9}
size=nums.size()

所有问题均求下标
问题一: 找出第一个>=5的数
问题二: 找出最后一个<5的数
问题三: 找出第一个>5的元素
问题四: 找出最后一个<=5的数

先给出代码
int L=-1,R=size;
while(L+1!=R)
{
	int mid=(L+R)/2;
	if(ISSATISFY(nums[mid])) //ISSATISFY是一个条件,判断mid是否满足
		L=mid;
	else
		R=mid;
}
return L | R;

L必须从-1开始,R必须从size开始
否则,当数组里的数全部满足mid的要求时,就会漏掉一个数

其中mid最小值为0[L=-1,R=1]
最大为N-1[L=size-2,R=size]
所以mid不会越界

1.	L+1=R
2.	L+2=R
3.	L+3=R
如果对于第二种情况,会回到第一种情况
对于第三种情况,先会回到第二种情况,再回到第一种情况
所以不会陷入死循环

三个细节都说完了

那么对于上面这四个问题
问题一:
设条件为: <5
返回: R

问题二:
设条件为: <5
返回: L

问题三:
设条件为: <=5
返回: R

问题四:
设条件为: <=5
返回: L

最后根据题目再加一些细节处理就OK了











